import sys
import math
from collections import deque


def task(n, m, s, lrs):
    counts = [0]
    count = 0
    for i in range(n):
        if s[i] == '1':
            count += 1
        counts.append(count)
    counts.append(count)
    # print(counts)
    cache = {}
    for i in range(m):
        l = lrs[i][0] - 1
        r = lrs[i][1] - 1
        t = ""
        if l > 0:
            t += s[:l]
            # t += "-"

        amount = r - l + 1
        c = counts[r + 1] - counts[l]
        t += "0" * (amount - c)
        t += "1" * c
        # t += "-"
        # t += s[l:r+1]
        if r < n:
            t += s[r+1:]
        cache[t] = True
        # print(t, l, r, s[l:r+1], c)
    # print(cache)
    print(len(cache))
    # print(n, m, s, lrs)


t = int(input())
for _ in range(t):
    n, m = map(int, input().split())
    s = input()
    lrs = []
    for i in range(m):
        lrs.append(list(map(int, input().split())))
    task(n, m, s, lrs)
