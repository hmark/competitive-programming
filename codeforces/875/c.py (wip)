from collections import deque


def task(n, uvs):
    cache = {}

    for i in range(0, n-1):
        uv = uvs[i]
        if not uv[0] in cache:
            cache[uv[0]] = dict()
        cache[uv[0]][uv[1]] = i+1

    q = deque()
    q_next = deque([[1, 0]])
    ans = 0

    while len(q_next) > 0:
        # print(cache)
        ans += 1
        q = q_next
        q_next = deque()

        while len(q) > 0:
            a = q.popleft()
            u = a[0]

            if u in cache:
                removed = []
                for v in cache[u]:
                    if cache[u][v] > a[1]:
                        q.append([v, cache[u][v]])
                        q_next.append([v, 0])
                        removed.append(v)
                for v in removed:
                    del cache[u][v]
                if len(cache[u]) == 0:
                    del cache[u]

        if len(cache) == 0:
            print(ans)
            return


t = int(input())
for i in range(0, t):
    n = int(input())
    uv = []
    for i in range(n - 1):
        uv.append(list(map(int, input().split())))
    task(n, uv)
