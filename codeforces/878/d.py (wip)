import sys
import math
from collections import deque

input = sys.stdin.readline


def task(n, a):
    a = list(set(a))
    a.sort()
    print(a)
    cache = [deque(), deque(), deque()]

    for i in a:
        found = False
        for j in range(3):
            if len(cache[j]) == 0:
                cache[j].append(i)
                found = True
                break

        if not found:
            q1dist = cache[1][0] - cache[0][0]
            q2dist = cache[2][0] - cache[1][0]
            q3dist = i - cache[2][0]

            if q3dist < q2dist and q3dist < q1dist:
                cache[2].append(i)
            elif q2dist < q1dist:
                while len(cache[2]) > 0 and q2dist < q3dist:
                    cache[1].append(cache[2].popleft())
                    if len(cache[2]) > 0:
                        q2dist = cache[2][0] - cache[1][0]
                        q3dist = i - cache[2][0]
                cache[2].append(i)
            else:
                while len(cache[1]) > 0 and q1dist < q2dist:
                    cache[0].append(cache[1].popleft())
                    if len(cache[1]) > 0:
                        q1dist = cache[1][0] - cache[0][0]
                        q2dist = cache[2][0] - cache[1][0]
                while len(cache[2]) > 0 and q2dist > q3dist:
                    cache[1].append(cache[2].popleft())
                    if len(cache[2]) > 0:
                        q2dist = cache[2][0] - cache[1][0]
                        q3dist = i - cache[2][0]
                cache[2].append(i)
        print(i, cache)

    ans = 0
    for j in range(3):
        if len(cache[j]) > 0:
            dist = math.ceil((cache[j][-1] - cache[j][0]) / 2)
            ans = max(ans, dist)

    print(ans)


t = int(input())
for _ in range(t):
    n = int(input())
    a = list(map(int, input().split()))
    task(n, a)
